@page "/"
@using Grpc.Net.Client
@using Google.Protobuf.WellKnownTypes;
@using Grpc.Core
@using BlazorWasmGrpcBlog.Shared.Protos
@using BlazorWasmGrpcBlog.Shared
@using Microsoft.Extensions.Configuration
@inject GrpcChannel Channel

<h1>Blog Posts</h1>

@if (postsLst == null)
{
    <p>Loading ...</p>
}
else
{
    foreach (var post in postsLst)
    {
        <p>@ToLocalDate(post.DateCreated) - @post.Title by @post.Author.Name - @FromTimeStamp(post.PostExtended.Ts) (UTC)</p>
    }
}

@code {
    private BlogProto.BlogProtoClient client;
    private List<Post> postsLst;
    //private System.Globalization.CultureInfo cultureInfo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // TODO, get culture info from browser via JSInterop.
        // cultureInfo = new System.Globalization.CultureInfo("en-US");
        client = new BlogProto.BlogProtoClient(Channel);
        postsLst = (await client.GetPostsAsync(new Empty())).PostsData.ToList();
    }

    private string ToLocalDate(string dbUtcDate)
    {
        return DateTime.ParseExact(dbUtcDate, "yyyy-MM-dd HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture).ToLocalTime().ToString("yyyy-MM-dd HH:mm");
    }

    private string FromTimeStamp(Google.Protobuf.WellKnownTypes.Timestamp dbUtcTs)
    {
        return dbUtcTs.ToDateTime().ToString("HH:mm zzz");
    }


}
